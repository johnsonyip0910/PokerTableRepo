name: iOS CI (Simulator Build)

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build-ios-sim:
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install deps (npm ci fallback)
        run: |
          if [ -f "package-lock.json" ]; then
            npm ci || npm install
          else
            npm install
          fi

      - name: Build Web (Vite)
        run: npm run build

      - name: Ensure Capacitor deps
        run: npm i @capacitor/cli @capacitor/core

      - name: Install Capacitor iOS platform
        run: npm i -D @capacitor/ios

      - name: Add iOS platform if missing
        run: |
          if [ ! -d "ios" ]; then
            npx cap add ios
          fi

      - name: Sync Capacitor iOS
        run: npx cap sync ios

      - name: Detect iOS subdir / target / scheme
        id: detect
        shell: bash
        run: |
          set -euo pipefail
          APP_SUBDIR="App"
          # 若 ios/App 不存在，嘗試找含 .xcodeproj 的資料夾，否則取第一個子夾
          if [ ! -d "ios/$APP_SUBDIR" ]; then
            CANDIDATE=$(find ios -maxdepth 2 -type d -name "*.xcodeproj" | head -n 1 || true)
            if [ -n "$CANDIDATE" ]; then
              APP_SUBDIR=$(basename "$(dirname "$CANDIDATE")")
            else
              APP_SUBDIR=$(ls -1d ios/*/ 2>/dev/null | head -n 1 | xargs -I{} basename "{}")
            fi
          fi
          if [ -z "$APP_SUBDIR" ]; then
            echo "❌ 無法偵測 iOS App 子資料夾（ios/*）"
            exit 1
          fi
          cd "ios/$APP_SUBDIR"

          if [ -f "App.xcworkspace/contents.xcworkspacedata" ]; then
            XCODE_TARGET='-workspace App.xcworkspace'
          else
            XCODE_TARGET='-project App.xcodeproj'
          fi

          SCHEME=$(xcodebuild -list -json $XCODE_TARGET 2>/dev/null | python3 -c "import sys,json; d=json.load(sys.stdin); s=(d.get('workspace',{}).get('schemes') or d.get('project',{}).get('schemes') or []); print(s[0] if s else 'App')")
          echo "APP_SUBDIR=$APP_SUBDIR" >> "$GITHUB_OUTPUT"
          echo "XCODE_TARGET=$XCODE_TARGET" >> "$GITHUB_OUTPUT"
          echo "SCHEME=$SCHEME" >> "$GITHUB_OUTPUT"
          echo "Detected: APP_SUBDIR=$APP_SUBDIR, $XCODE_TARGET, SCHEME=$SCHEME"

      - name: Build iOS Simulator .app (no codesign)
        shell: bash
        run: |
          # 不用 set -u，避免 CRLF/不可見字元令未設變數即爆；用安全預設代替
          set -eo pipefail

          WEB_DIR="${WEB_DIR:-dist}"  # 如你的 webDir 非 dist，改呢個
          APP_SUBDIR="${{ steps.detect.outputs.APP_SUBDIR }}"
          SCHEME="${{ steps.detect.outputs.SCHEME }}"
          XCODE_TARGET="${{ steps.detect.outputs.XCODE_TARGET }}"

          echo "Using WEB_DIR=$WEB_DIR"
          [ ! -d "$WEB_DIR" ] && echo "⚠️  找不到 $WEB_DIR；請確認 webDir 與 build 產物一致。"

          cd "ios/$APP_SUBDIR"

          xcodebuild $XCODE_TARGET -scheme "$SCHEME" -configuration Debug -sdk iphonesimulator \
            CODE_SIGNING_ALLOWED=NO CODE_SIGNING_REQUIRED=NO CODE_SIGNING_IDENTITY="" \
            -derivedDataPath build

          APP_PATH=$(find build/Build/Products/Debug-iphonesimulator -maxdepth 1 -name "*.app" | head -n 1)
          if [ -z "$APP_PATH" ]; then
            echo "❌ 找不到 .app 輸出，請檢查 xcodebuild 日誌。"
            exit 1
          fi

          cd "$(dirname "$APP_PATH")"
          zip -r app-simulator.zip "$(basename "$APP_PATH")"
          mkdir -p "$GITHUB_WORKSPACE/artifacts"
          mv app-simulator.zip "$GITHUB_WORKSPACE/artifacts/"

      - name: Upload artifact (app-simulator.zip)
        uses: actions/upload-artifact@v4
        with:
          name: app-simulator
          path: artifacts/app-simulator.zip