name: iOS CI (Simulator Build)

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build-ios-sim:
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install deps (npm ci fallback)
        run: |
          if [ -f "package-lock.json" ]; then
            npm ci || npm install
          else
            npm install
          fi

      - name: Build Web (Vite)
        run: npm run build

      - name: Ensure Capacitor deps
        run: npm i @capacitor/cli @capacitor/core

      - name: Install Capacitor iOS platform
        run: npm i -D @capacitor/ios

      - name: Add iOS platform if missing
        run: |
          if [ ! -d "ios" ]; then
            npx cap add ios
          fi

      - name: Sync Capacitor iOS
        run: npx cap sync ios

      - name: Detect iOS app subdir & scheme
        id: detect
        shell: bash
        run: |
          set -euo pipefail
          APP_SUBDIR=""
          if [ -d "ios/App" ]; then
            APP_SUBDIR="App"
          else
            XC=$(find ios -maxdepth 2 -type d -name "*.xcodeproj" | head -n 1 || true)
            if [ -n "$XC" ]; then
              APP_SUBDIR=$(basename "$(dirname "$XC")")
            else
              APP_SUBDIR=$(ls -1d ios/*/ | head -n 1 | xargs -I{} basename "{}")
            fi
          fi
          if [ -z "$APP_SUBDIR" ]; then
            echo "❌ 無法偵測 iOS App 子資料夾（ios/*）"
            exit 1
          fi
          echo "APP_SUBDIR=$APP_SUBDIR" | tee -a "$GITHUB_OUTPUT"

          cd "ios/$APP_SUBDIR"
          if [ -f "App.xcworkspace/contents.xcworkspacedata" ]; then
            echo "XCODE_TARGET=-workspace App.xcworkspace" | tee -a "$GITHUB_OUTPUT"
          else
            echo "XCODE_TARGET=-project App.xcodeproj" | tee -a "$GITHUB_OUTPUT"
          fi

          SCHEME=$(xcodebuild -list -json $(echo "${{ steps.detect.outputs.XCODE_TARGET:- -project App.xcodeproj }}") 2>/dev/null | python3 - <<'PY'
import sys, json
try:
  d = json.load(sys.stdin)
  for k in ("workspace","project"):
    if k in d and "schemes" in d[k] and d[k]["schemes"]:
      print(d[k]["schemes"][0])
      break
  else:
    print("App")
except Exception:
  print("App")
PY
)
          echo "SCHEME=$SCHEME" | tee -a "$GITHUB_OUTPUT"

      - name: (Safety) strip CR from tracked files
        shell: bash
        run: |
          git ls-files -z | xargs -0 -I{} bash -lc 'sed -i $'\''s/\r$//'\'' "{}" || true'
          echo "Stripped CR from tracked files (if any)."

      - name: Pod install if workspace exists
        shell: bash
        run: |
          set -e
          cd "ios/${{ steps.detect.outputs.APP_SUBDIR }}"
          if [ -f "App.xcworkspace/contents.xcworkspacedata" ]; then
            pod install --repo-update
          else
            echo "No workspace detected; skip pods."
          fi

      - name: Build iOS Simulator .app (no codesign)
        shell: bash
        run: |
          # IMPORTANT: do NOT use `set -u` because CRLF may corrupt names; use safe defaults instead
          set -eo pipefail

          WEB_DIR="${WEB_DIR:-dist}"
          APP_SUBDIR="${{ steps.detect.outputs.APP_SUBDIR }}"
          SCHEME="${{ steps.detect.outputs.SCHEME }}"
          XCODE_TARGET="${{ steps.detect.outputs.XCODE_TARGET }}"

          printf 'Using WEB_DIR=%s\n' "$WEB_DIR"
          printf 'Using APP_SUBDIR=%s, SCHEME=%s, XCODE_TARGET=%s\n' "$APP_SUBDIR" "$SCHEME" "$XCODE_TARGET"

          if [ ! -d "$WEB_DIR" ]; then
            echo "⚠️  注意：找不到 $WEB_DIR。請確認前端 build 產物資料夾同 capacitor.config 的 webDir 一致。"
          fi

          cd "ios/$APP_SUBDIR"

          xcodebuild $XCODE_TARGET -scheme "$SCHEME" -configuration Debug -sdk iphonesimulator \
            CODE_SIGNING_ALLOWED=NO CODE_SIGNING_REQUIRED=NO CODE_SIGNING_IDENTITY="" \
            -derivedDataPath build

          APP_PATH=$(find build/Build/Products/Debug-iphonesimulator -maxdepth 1 -name "*.app" | head -n 1)
          if [ -z "$APP_PATH" ]; then
            echo "❌ 找不到 .app 輸出，請檢查 xcodebuild 日誌。"
            exit 1
          fi

          cd "$(dirname "$APP_PATH")"
          zip -r app-simulator.zip "$(basename "$APP_PATH")"
          mkdir -p "$GITHUB_WORKSPACE/artifacts"
          mv app-simulator.zip "$GITHUB_WORKSPACE/artifacts/"

      - name: Upload artifact (app-simulator.zip)
        uses: actions/upload-artifact@v4
        with:
          name: app-simulator
          path: artifacts/app-simulator.zip